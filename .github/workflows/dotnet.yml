# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET
  
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.x.x
        
    - name: Restore dependencies
      run: dotnet restore MinimalApiTemplate.sln
    
    - name: Build
      run: dotnet build MinimalApiTemplate.sln --no-restore
    
    - name: Test
      run: dotnet test MinimalApiTemplate.sln -p:CollectCoverage=true -p:CoverletOutputFormat=cobertura --no-build --verbosity normal
    
    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@5.1.21
      with:
        reports: '${{ github.workspace }}/tests/*Tests*/coverage.cobertura.xml' # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
        targetdir: '${{ github.workspace }}/CodeCoverage' # REQUIRED # The directory where the generated report should be saved.
        reporttypes: 'HtmlInline;Cobertura;Badges' # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, OpenCover, CsvSummary, Html, Html_Dark, Html_Light, Html_BlueRed, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlInline_AzurePipelines_Light, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MarkdownSummary, MarkdownSummaryGithub, MarkdownDeltaSummary, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, TextDeltaSummary, Xml, XmlSummary
        tag: '${{ github.run_number }}_${{ github.run_id }}' # Optional tag or build version.
        toolpath: 'reportgeneratortool' # Default directory for installing the dotnet tool    

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.cs.opencover.reportsPaths='${{ github.workspace }}/tests/*Tests*/coverage.cobertura.xml'
          -Dsonar.coverage.exclusions=**/Migrations/**
        
    - name: Upload Badge
      uses: exuanbo/actions-deploy-gist@v1.1.4
      with:
        token: ${{ secrets.TOKEN }}
        gist_id: 036191e91ff7da1f940618f701c0ad9f
        file_path: 'CodeCoverage/badge_combined.svg'
        file_type: binary
        gist_file_name: badge_combined.svg
      if: github.event_name != 'pull_request'  

    - name: Upload coverage report artifact
      uses: actions/upload-artifact@v4
      with:
        name: CoverageReport # Artifact name        
        path: ${{ github.workspace }}/CodeCoverage # Directory containing files to upload
  
